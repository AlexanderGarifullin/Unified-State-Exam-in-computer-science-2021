{(№ 2670) (Д.Ф. Муфаззалов) Имеется набор данных, состоящий из троек положительных
целых чисел. Необходимо выбрать из каждой тройки ровно одно число так, чтобы сумма 
всех выбранных чисел не делилась на 4 и при этом была максимально возможной. 
Гарантируется, что искомую сумму получить можно. Программа должна напечатать 
одно число – максимально возможную сумму, соответствующую условиям задачи.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых 
содержит в первой строке количество троек N (1 ≤ N ≤ 100000). Каждая из следующих
N строк содержит три натуральных числа, не превышающих 10 000.
Пример входного файла:
6
1 3 2
5 12 12
6 8 12
5 4 12
3 3 12
1 1 13
Для указанных входных данных значением искомой суммы должно быть число 63.
В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.}
var
  i, j, mx, mn, n, md, a, b, x, c, t1, t2, s: integer;
  d: array[0..4] of integer;
  d2: array[0..4] of integer;

begin
  assign(input, '27-10b.txt');
  readln(n);
  for i := 0 to 4 do d[i] := 100000;
  for i := 1 to n do
  begin
    readln(a, b, c);
    s += max(a, max(b, c));
    mx := max(a, max(b, c));
    mn := min(a, min(b, c));
    md := a + b + c - mn - mx;
    t1 := mx - mn;
    t2 := mx - md;
    for j := 0 to 3 do 
      d2[j] := d[j];
    for j := 0 to 3 do
    begin
      if t1 + d2[j] < (d2[(t1 + d2[j]) mod 4]) then
        d[(t1 + d2[j]) mod 4] := t1 + d2[j];
      
      if t2 + d2[j] < (d2[(t2 + d2[j]) mod 4]) then
        d[(t2 + d2[j]) mod 4] := t2 + d2[j]; 
    end;
    if t1 < d[t1 mod 4] then d[t1 mod 4] := t1;
    if t2 < d[t2 mod 4] then d[t2 mod 4] := t2;
  end;
  x := 100000;  
  if s mod 4 = 0 then
  begin
    for i := 1 to 3 do
      x := min(x, d[i]);
    s -= x;   
  end;   
  writeln(s);    
end.